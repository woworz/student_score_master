<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.score.dao.User.RegisterMapper" >
    <resultMap id="BaseRegisterMap" type="com.example.score.dto.RegisterUser" >
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="level" property="level" jdbcType="INTEGER" />
        <result column="school" property="school" jdbcType="VARCHAR" />
        <result column="admission_time" property="admissionTime" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="profession" property="profession" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="grade" property="grade" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
    </resultMap>

    <insert id="addRegister" parameterType="com.example.score.dto.RegisterUser">
        INSERT INTO register_user (
            id, username, password, real_name, level, school, admission_time, 
            email, profession, phone, sex, grade, create_time, status
        ) VALUES (
            #{id}, #{username}, #{password}, #{realName}, #{level}, #{school}, #{admissionTime}, 
            #{email}, #{profession}, #{phone}, #{sex}, #{grade}, now(), 0
        )
    </insert>

    <select id="getRegisterList" resultMap="BaseRegisterMap" parameterType="map">
        SELECT
            *
        FROM register_user
        <where>
            <if test="condition.status != null">
                status = #{condition.status}
            </if>
            <if test="condition.code != null and condition.code != ''">
                AND (id LIKE CONCAT('%', #{condition.code}, '%') OR real_name LIKE CONCAT('%', #{condition.code}, '%'))
            </if>
            <if test="condition.level != null">
                AND level = #{condition.level}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="getRegisterById" resultMap="BaseRegisterMap" parameterType="string">
        SELECT
            *
        FROM register_user
        WHERE id = #{id}
    </select>

    <update id="updateStatus" parameterType="map">
        UPDATE register_user
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <delete id="deleteRegister" parameterType="list">
        DELETE FROM register_user
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="checkUsernameExists" resultType="java.lang.Integer" parameterType="string">
        SELECT COUNT(1) FROM (
            SELECT username FROM student WHERE username = #{username}
            UNION ALL
            SELECT username FROM teacher WHERE username = #{username}
            UNION ALL
            SELECT username FROM admin WHERE username = #{username}
            UNION ALL
            SELECT username FROM register_user WHERE username = #{username} AND status = 0
        ) AS temp
    </select>
</mapper>
