<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.score.dao.Profession.ProfessionMapper" >
    <resultMap id="BaseUserMap" type="com.example.score.domain.Profession" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
    </resultMap>

    <!-- 新增专业 -->
    <insert id="addProfession" parameterType="com.example.score.domain.Profession">
        <selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
            select LAST_INSERT_ID() as id
        </selectKey>
        INSERT INTO profession
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">`name`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
        </trim>
    </insert>

    <!-- 删除专业 -->
    <delete id="deleteProfession" parameterType="int">
        DELETE FROM
        profession
        <where>
            id = #{id}
        </where>
    </delete>

    <!-- 更新专业 -->
    <update id="updateProfession" parameterType="com.example.score.domain.Profession">
        UPDATE profession
        <set>
            <if test="name != null and name != ''">
                `name` = #{name},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!-- 检查专业名是否存在 -->
    <select id="checkProfessionCount" resultType="int" parameterType="string">
        select count(0) from profession
        <where>
            name = #{name}
        </where>
    </select>

    <!-- 获取所有专业 -->
    <select id="getProfessionList" resultMap="BaseUserMap">
        SELECT
            *
        from profession
        ORDER BY id
    </select>

    <!-- 获取专业列表（分页） -->
    <select id="getProfessionListPaging" resultMap="BaseUserMap" parameterType="map">
        SELECT
            *
        from profession
        <where>
            <if test="condition.name != null and condition.name != ''">
                name LIKE CONCAT('%',#{condition.name},'%')
            </if>
        </where>
        ORDER BY id
    </select>

    <!-- 根据专业名查询专业信息 -->
    <select id="getProfessionIdByName" resultMap="BaseUserMap" parameterType="string">
        SELECT
            id
        from profession
        where name = #{name}
    </select>

    <!-- 根据ID查询专业 -->
    <select id="getProfessionById" resultMap="BaseUserMap" parameterType="int">
        SELECT
            *
        from profession
        where id = #{id}
    </select>
</mapper>

